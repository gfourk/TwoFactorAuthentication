/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TwoFAClientFrame.java
 *
 * Created on 12 Φεβ 2011, 10:17:40 πμ
 */

package TwoFAClientGUI;

import TwoFAClient.TwoFAClient;
import crypto.crypt;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author vvasil
 */
public class TwoFAClientFrame extends javax.swing.JFrame {

    TwoFAClient client;
    /** Creates new form TwoFAClientFrame */
    public TwoFAClientFrame(TwoFAClient client) {
        this.client = client;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        passwordfield = new javax.swing.JPasswordField();
        usernamefield = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        PINfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        registerButton = new javax.swing.JButton();
        this.registerButton.setEnabled(false);
        OTPButton = new javax.swing.JButton();
        this.OTPButton.setEnabled(false);
        IPfield = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Portfield = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("2 FA Client");

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        usernamefield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernamefieldActionPerformed(evt);
            }
        });

        jButton1.setText("login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        PINfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PINfieldActionPerformed(evt);
            }
        });

        jLabel4.setText("PIN:");

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        OTPButton.setText("OTP");
        OTPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OTPButtonActionPerformed(evt);
            }
        });

        IPfield.setText("localhost");
        IPfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPfieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Server IP: ");

        jLabel6.setText("Server Port: ");

        Portfield.setText("2222");
        Portfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PortfieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(PINfield, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OTPButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(IPfield, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Portfield, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(usernamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(4, 4, 4)
                        .addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jLabel1)
                .addContainerGap(157, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(usernamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PINfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(registerButton)
                    .addComponent(OTPButton))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IPfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(Portfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Save and Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAndExitHandler(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Load Server Cert");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadServerCertHandler(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernamefieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernamefieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernamefieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // first check that a username and password was given
        if(     this.usernamefield.getText() == null ||
                this.usernamefield.getText().equals("") ||
                (new String(this.passwordfield.getPassword()) == null) ||
                (new String(this.passwordfield.getPassword()).equals(""))  )
            return ;

        if(crypt.password_ok(new String(this.passwordfield.getPassword())) == false) return;
        // now try to find a file username.client
        File file = new File(this.usernamefield.getText()+".client");

        // if the file exists the try to load it
        if(file.exists()){
            //System.out.println("file exists");
             boolean loaded = this.client.load_file(file,new String(this.passwordfield.getPassword()));
             if(!loaded) return;
            // System.out.println("file exists and was loades OK");
        }
        else{
            //System.out.println("file does not exist");
            boolean created = client.create_file(this.usernamefield.getText(),
                    new String(this.passwordfield.getPassword()));
            if(!created) return;
            //System.out.println("file does not exist but was created");
        }
        // if we have not returned by now unlock the app
        this.registerButton.setEnabled(true);
        this.OTPButton.setEnabled(true);
        this.jButton1.setEnabled(false);
        this.client.logged_in = true;
        this.passwordfield.setText("");

        return;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void PINfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PINfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PINfieldActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        
        if(this.PINfield.getText() == null || this.PINfield.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,
                    "PIN required",
                    "Give me a PIN",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(this.IPfield.getText() == null || this.IPfield.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,
                    "Server IP required",
                    "Give me an IP",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(this.Portfield.getText() == null || this.Portfield.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,
                    "Server port required",
                    "Give me a port",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        String reg_number = this.client.register(this.PINfield.getText(),this.Portfield.getText(), this.IPfield.getText());
        if(reg_number == null){
            JOptionPane.showMessageDialog(this,
                    "ERROR registering.",
                    "Error registering",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            JOptionPane.showMessageDialog(this,
                    "Registration Number:"+reg_number,
                    "Registration Successfull.",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private void OTPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OTPButtonActionPerformed
        if(this.PINfield.getText() == null || this.PINfield.getText().equals(""))
        {
        JOptionPane.showMessageDialog(this,
                    "PIN required",
                    "Give me a PIN",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(this.IPfield.getText() == null || this.IPfield.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,
                    "Server IP required",
                    "Give me an IP",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(this.Portfield.getText() == null || this.Portfield.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,
                    "Server port required",
                    "Give me a port",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        String OTP = this.client.get_OTP(this.PINfield.getText(),this.Portfield.getText(), this.IPfield.getText());
        if(OTP == null){
            JOptionPane.showMessageDialog(this,
                    "ERROR getting OTP.",
                    "Error getting OTP",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            JOptionPane.showMessageDialog(this,
                    "OTP : "+OTP,
                    "karamba",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }
    }//GEN-LAST:event_OTPButtonActionPerformed

    private void IPfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IPfieldActionPerformed

    private void PortfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PortfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PortfieldActionPerformed

    private void SaveAndExitHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAndExitHandler
        if(client.logged_in == false)
            return;
        boolean result = this.client.save_and_exit();
        if(result == true)
            System.exit(0);
    }//GEN-LAST:event_SaveAndExitHandler

    private void LoadServerCertHandler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadServerCertHandler
        if(client.logged_in == false)
            return;
        JFileChooser choose_file = new JFileChooser("Load certificate");
	int returnVal = choose_file.showDialog(this, "Load certificate");

	// if the user pressed the accept in the save file dialog
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = choose_file.getSelectedFile(); // get the file
            if(this.client.load_server_cert(file) == false){
                JOptionPane.showMessageDialog(this,
                    "ERROR loading file.",
                    "Error loading the servers certificate",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_LoadServerCertHandler

    /**
    * @param args the command line arguments
    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TwoFAClientFrame(null).setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IPfield;
    private javax.swing.JButton OTPButton;
    private javax.swing.JTextField PINfield;
    private javax.swing.JTextField Portfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField passwordfield;
    private javax.swing.JButton registerButton;
    private javax.swing.JTextField usernamefield;
    // End of variables declaration//GEN-END:variables

}
