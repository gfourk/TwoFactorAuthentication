package TwoFANetworkClientGUI;

import TwoFANetworkClient.TwoFANetClient;
import crypto.crypt;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class TwoFANetClientFrame extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;
	/** Creates new form TwoFAClientFrame */
	private TwoFANetClient client;

	public TwoFANetClientFrame(TwoFANetClient client) {
		this.client = client;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		passwordfield = new javax.swing.JPasswordField();
		usernamefield = new javax.swing.JTextField();
		jButton1 = new javax.swing.JButton();
		OTPfield = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		OTPButton = new javax.swing.JButton();
		this.OTPButton.setEnabled(false);
		IPfield = new javax.swing.JTextField();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		Portfield = new javax.swing.JTextField();
		Namefield = new javax.swing.JTextField();
		jLabel7 = new javax.swing.JLabel();
		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu1 = new javax.swing.JMenu();
		jMenuItem1 = new javax.swing.JMenuItem();
		jMenuItem2 = new javax.swing.JMenuItem();
		jMenuItem3 = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setResizable(false);

		jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36));
		jLabel1.setText("2 FA Network Client");

		jLabel2.setText("Username:");

		jLabel3.setText("Password:");

		usernamefield.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				usernamefieldActionPerformed(evt);
			}
		});

		jButton1.setText("login");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		OTPfield.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				OTPfieldActionPerformed(evt);
			}
		});

		jLabel4.setText("OTP");

		OTPButton.setText("Enter");
		OTPButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				OTPButtonActionPerformed(evt);
			}
		});

		IPfield.setText("localhost");
		IPfield.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				IPfieldActionPerformed(evt);
			}
		});

		jLabel5.setText("Server IP: ");

		jLabel6.setText("Server Port: ");

		Portfield.setText("2222");
		Portfield.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				PortfieldActionPerformed(evt);
			}
		});

		Namefield.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				NamefieldActionPerformed(evt);
			}
		});

		jLabel7.setText("Name:");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(jLabel2).addComponent(jLabel4).addComponent(jLabel5))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(jLabel1)
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addComponent(IPfield, javax.swing.GroupLayout.PREFERRED_SIZE, 116,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jLabel6)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(Portfield, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addComponent(usernamefield, javax.swing.GroupLayout.PREFERRED_SIZE,
														116, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(jLabel3))
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addComponent(OTPfield, javax.swing.GroupLayout.PREFERRED_SIZE, 116,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(jLabel7)))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(jPanel1Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(Namefield).addComponent(passwordfield,
														javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(jPanel1Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(OTPButton).addComponent(jButton1))))
						.addContainerGap(18, Short.MAX_VALUE)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1)
						.addGap(18, 18, 18)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel2)
								.addComponent(usernamefield, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel3)
								.addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 20,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButton1))
						.addGap(30, 30, 30)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(OTPfield, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel4)
								.addComponent(Namefield, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(OTPButton).addComponent(jLabel7))
						.addGap(26, 26, 26)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(IPfield, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel5).addComponent(jLabel6).addComponent(Portfield,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(38, Short.MAX_VALUE)));

		jMenu1.setText("File");

		jMenuItem1.setText("Save and Exit");
		jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				save_exitHandler(evt);
			}
		});
		jMenu1.add(jMenuItem1);

		jMenuItem2.setText("Load Server Cert");
		jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				LoadServerCerthandler(evt);
			}
		});
		jMenu1.add(jMenuItem2);

		jMenuItem3.setText("Save Pulic Key");
		jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				SavePublichandler(evt);
			}
		});
		jMenu1.add(jMenuItem3);

		jMenuBar1.add(jMenu1);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void usernamefieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_usernamefieldActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_usernamefieldActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
		// first check that a username and password was given
		if (this.usernamefield.getText() == null || this.usernamefield.getText().equals("")
				|| (new String(this.passwordfield.getPassword()) == null)
				|| (new String(this.passwordfield.getPassword()).equals("")))
			return;

		if (crypt.password_ok(new String(this.passwordfield.getPassword())) == false)
			return;

		// now try to find a file username.client
		File file = new File(this.usernamefield.getText() + ".netclient");

		// if the file exists the try to load it
		if (file.exists()) {
			// System.out.println("file exists");
			boolean loaded = this.client.load_file(file, new String(this.passwordfield.getPassword()));
			if (!loaded)
				return;
		} else {
			boolean created = client.create_file(this.usernamefield.getText(),
					new String(this.passwordfield.getPassword()));
			if (!created)
				return;
			// System.out.println("file does not exist but was created");
		}
		// if we have not returned by now unlock the app
		this.OTPButton.setEnabled(true);
		this.jButton1.setEnabled(false);
		this.client.setLogged_in(true);
		this.passwordfield.setText("");

		return;

	}// GEN-LAST:event_jButton1ActionPerformed

	private void OTPButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_OTPButtonActionPerformed
		if (this.OTPfield.getText() == null || this.OTPfield.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "OTP required", "Give me an OTP", JOptionPane.ERROR_MESSAGE);
			return;
		}
		if (this.Namefield.getText() == null || this.Namefield.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "Name required", "Give me a Name", JOptionPane.ERROR_MESSAGE);
			return;
		}
		if (this.IPfield.getText() == null || this.IPfield.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "Server IP required", "Give me an IP", JOptionPane.ERROR_MESSAGE);
			return;
		}
		if (this.Portfield.getText() == null || this.Portfield.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "Server port required", "Give me a port", JOptionPane.ERROR_MESSAGE);
			return;
		}
		String result = this.client.check_OTP(this.OTPfield.getText(), this.Namefield.getText(),
				this.Portfield.getText(), this.IPfield.getText());
		if (result == null) {
			JOptionPane.showMessageDialog(this, "ERROR Checking OTP.", "Error checking OTP", JOptionPane.ERROR_MESSAGE);
			return;
		} else if (result.equals("PASS")) {
			JOptionPane.showMessageDialog(this, "RESULT : " + result,
					"User: " + this.Namefield.getText() + " OTP: " + this.OTPfield.getText(),
					JOptionPane.INFORMATION_MESSAGE);
			return;
		} else if (result.equals("FAIL")) {
			JOptionPane.showMessageDialog(this, "RESULT : " + result,
					"User: " + this.Namefield.getText() + " OTP: " + this.OTPfield.getText(),
					JOptionPane.ERROR_MESSAGE);
			return;
		} else {
			JOptionPane.showMessageDialog(this, "RESULT : " + "ERROR",
					"User: " + this.Namefield.getText() + " OTP: " + this.OTPfield.getText(),
					JOptionPane.ERROR_MESSAGE);
			return;
		}
	}// GEN-LAST:event_OTPButtonActionPerformed

	private void IPfieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_IPfieldActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_IPfieldActionPerformed

	private void PortfieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_PortfieldActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_PortfieldActionPerformed

	private void OTPfieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_OTPfieldActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_OTPfieldActionPerformed

	private void LoadServerCerthandler(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_LoadServerCerthandler
		if (client.isLogged_in() == false)
			return;
		JFileChooser choose_file = new JFileChooser("Load certificate");
		int returnVal = choose_file.showDialog(this, "Load certificate");

		// if the user pressed the accept in the save file dialog
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			File file = choose_file.getSelectedFile(); // get the file
			if (this.client.load_server_cert(file) == false) {
				JOptionPane.showMessageDialog(this, "ERROR loading file.", "Error loading the servers certificate",
						JOptionPane.ERROR_MESSAGE);
			}
		}
	}// GEN-LAST:event_LoadServerCerthandler

	private void SavePublichandler(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_SavePublichandler
		if (client.isLogged_in() == false)
			return;
		JFileChooser choose_file = new JFileChooser("save public key");
		int returnVal = choose_file.showDialog(this, "save public key");

		// if the user pressed the accept in the save file dialog
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			File file = choose_file.getSelectedFile(); // get the file
			if (this.client.save_public_key(file) == false) {
				JOptionPane.showMessageDialog(this, "ERROR saving file.", "Error saving the public key",
						JOptionPane.ERROR_MESSAGE);
			}
		}
	}// GEN-LAST:event_SavePublichandler

	private void NamefieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_NamefieldActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_NamefieldActionPerformed

	private void save_exitHandler(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_save_exitHandler
		if (client.isLogged_in() == false)
			return;
		boolean result = this.client.save_and_exit();
		if (result == true)
			System.exit(0);
	}// GEN-LAST:event_save_exitHandler

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTextField IPfield;
	private javax.swing.JTextField Namefield;
	private javax.swing.JButton OTPButton;
	private javax.swing.JTextField OTPfield;
	private javax.swing.JTextField Portfield;
	private javax.swing.JButton jButton1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JMenu jMenu1;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JMenuItem jMenuItem1;
	private javax.swing.JMenuItem jMenuItem2;
	private javax.swing.JMenuItem jMenuItem3;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPasswordField passwordfield;
	private javax.swing.JTextField usernamefield;
	// End of variables declaration//GEN-END:variables

}
