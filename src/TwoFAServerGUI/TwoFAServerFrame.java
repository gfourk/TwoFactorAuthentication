package TwoFAServerGUI;

import TwoFAServer.TwoFAServer;
import crypto.crypt;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class TwoFAServerFrame extends javax.swing.JFrame {

	private static final long serialVersionUID = 1L;
	private TwoFAServer server;

	/** Creates new form TwoFAServerFrame */
	public TwoFAServerFrame(TwoFAServer server) {
		this.server = server;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel2 = new javax.swing.JLabel();
		usernamefield = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		passwordfield = new javax.swing.JPasswordField();
		jButton1 = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		certNamefiled = new javax.swing.JTextField();
		certloadKeyButton = new javax.swing.JButton();
		this.certloadKeyButton.setEnabled(false);
		certCreateCertButton = new javax.swing.JButton();
		this.certCreateCertButton.setEnabled(false);
		jLabel6 = new javax.swing.JLabel();
		registernamefiled = new javax.swing.JTextField();
		registerCodefield = new javax.swing.JTextField();
		jLabel7 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		registerButton = new javax.swing.JButton();
		this.registerButton.setEnabled(false);
		jButton2 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		jLabel9 = new javax.swing.JLabel();
		new javax.swing.JTabbedPane();
		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu1 = new javax.swing.JMenu();
		menuSave = new javax.swing.JMenuItem();
		savePublicmenu = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel2.setText("Username:");

		usernamefield.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				usernamefieldActionPerformed(evt);
			}
		});

		jLabel3.setText("Password:");

		jButton1.setText("login");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
		jLabel1.setText("2 FA Server");

		jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
		jLabel4.setText("Create Certificate");

		jLabel5.setText("Name: ");

		certNamefiled.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				certNamefiledActionPerformed(evt);
			}
		});

		certloadKeyButton.setText("load public key");
		certloadKeyButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				certloadKeyButtonActionPerformed(evt);
			}
		});

		certCreateCertButton.setText("Create Certificate");
		certCreateCertButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				certCreateCertButtonActionPerformed(evt);
			}
		});

		jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
		jLabel6.setText("Register a User");

		registernamefiled.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				registernamefiledActionPerformed(evt);
			}
		});

		registerCodefield.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				registerCodefieldActionPerformed(evt);
			}
		});

		jLabel7.setText("Name: ");

		jLabel8.setText("Registration Code : ");

		registerButton.setText("Register");
		registerButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				registerButtonActionPerformed(evt);
			}
		});

		jButton2.setText("Refresh");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
		jTextArea1.setColumns(20);
		jTextArea1.setEditable(false);
		jTextArea1.setRows(5);
		jScrollPane1.setViewportView(jTextArea1);

		jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
		jLabel9.setText("Users - Clients - Certificates");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup().addGap(173, 173, 173).addComponent(jLabel6))
						.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap()
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(jLabel2).addComponent(jLabel5).addComponent(jLabel7))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addComponent(registernamefiled, javax.swing.GroupLayout.PREFERRED_SIZE,
														116, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(jLabel8)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(registerCodefield, javax.swing.GroupLayout.PREFERRED_SIZE,
														116, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(registerButton, javax.swing.GroupLayout.DEFAULT_SIZE, 93,
														Short.MAX_VALUE))
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addComponent(certNamefiled, javax.swing.GroupLayout.PREFERRED_SIZE,
														116, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(certloadKeyButton, javax.swing.GroupLayout.PREFERRED_SIZE,
														147, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(certCreateCertButton,
														javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))
										.addGroup(jPanel1Layout.createSequentialGroup()
												.addComponent(usernamefield, javax.swing.GroupLayout.PREFERRED_SIZE,
														116, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(18, 18, 18).addComponent(jLabel3).addGap(4, 4, 4)
												.addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE,
														102, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 135,
														Short.MAX_VALUE))
										.addGroup(jPanel1Layout.createSequentialGroup().addGap(10, 10, 10)
												.addComponent(jLabel9))))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
								.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jButton2))
						.addGroup(jPanel1Layout.createSequentialGroup().addGap(171, 171, 171).addComponent(jLabel4))
						.addGroup(jPanel1Layout.createSequentialGroup().addGap(144, 144, 144).addComponent(jLabel1)))
						.addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1)
						.addGap(18, 18, 18)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel2).addComponent(jLabel3)
								.addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 20,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButton1).addComponent(usernamefield,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18).addComponent(jLabel4)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel5)
								.addComponent(certNamefiled, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(certloadKeyButton).addComponent(certCreateCertButton))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel6)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel7).addComponent(jLabel8)
								.addComponent(registerCodefield, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(registerButton).addComponent(registernamefiled,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel9)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										jPanel1Layout.createSequentialGroup().addComponent(jButton2).addContainerGap())
								.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 161,
										Short.MAX_VALUE))));

		jMenu1.setText("File");

		menuSave.setText("Save and Exit");
		menuSave.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				menuSavehandler(evt);
			}
		});
		jMenu1.add(menuSave);

		savePublicmenu.setText("Save Public Key");
		savePublicmenu.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				savePublicMenuHandler(evt);
			}
		});
		jMenu1.add(savePublicmenu);

		jMenuBar1.add(jMenu1);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed

		// first check that a username and password was given
		if (this.usernamefield.getText() == null || this.usernamefield.getText().equals("")
				|| (new String(this.passwordfield.getPassword()) == null)
				|| (new String(this.passwordfield.getPassword()).equals("")))
			return;

		if (crypt.password_ok(new String(this.passwordfield.getPassword())) == false)
			return;

		// now try to find a file username.client
		File file = new File(this.usernamefield.getText() + ".server");

		// if the file exists the try to load it
		if (file.exists()) {
			// System.out.println("file exists");
			boolean loaded = this.server.load_file(file, new String(this.passwordfield.getPassword()));
			if (!loaded)
				return;
			// System.out.println("file exists and was loades OK");
		} else {
			// System.out.println("file does not exist");
			boolean created = server.create_file(this.usernamefield.getText(),
					new String(this.passwordfield.getPassword()));
			if (!created)
				return;
			// System.out.println("file does not exist but was created");
		}
		// if we have not returned by now unlock the app
		this.jButton1.setEnabled(false);
		this.passwordfield.setText("");
		this.server.logged_in = true;
		this.certloadKeyButton.setEnabled(true);
		this.certCreateCertButton.setEnabled(true);
		this.registerButton.setEnabled(true);
		return;
	}// GEN-LAST:event_jButton1ActionPerformed

	private void usernamefieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_usernamefieldActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_usernamefieldActionPerformed

	private void menuSavehandler(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_menuSavehandler
		if (server.logged_in == false)
			return;
		boolean result = this.server.save_and_exit();
		if (result == true)
			System.exit(0);
	}// GEN-LAST:event_menuSavehandler

	private void savePublicMenuHandler(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_savePublicMenuHandler
		if (server.logged_in == false)
			return;
		JFileChooser choose_file = new JFileChooser("save public key");
		int returnVal = choose_file.showDialog(this, "save public key");

		// if the user pressed the accept in the save file dialog
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			File file = choose_file.getSelectedFile(); // get the file
			if (this.server.save_public_key(file) == false) {
				JOptionPane.showMessageDialog(this, "ERROR saving file.", "Error saving the public key",
						JOptionPane.ERROR_MESSAGE);
			}
		}
	}// GEN-LAST:event_savePublicMenuHandler

	private void certNamefiledActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_certNamefiledActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_certNamefiledActionPerformed

	private void certloadKeyButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_certloadKeyButtonActionPerformed
		if (server.logged_in == false)
			return;

		JFileChooser choose_file = new JFileChooser("load public key");
		int returnVal = choose_file.showDialog(this, "load public key");

		// if the user pressed the accept in the save file dialog
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			File file = choose_file.getSelectedFile(); // get the file
			if (this.server.load_cert_public_key(file) == false) {
				JOptionPane.showMessageDialog(this, "ERROR loading file.", "Error loading the public key",
						JOptionPane.ERROR_MESSAGE);
			}
		}
	}// GEN-LAST:event_certloadKeyButtonActionPerformed

	private void certCreateCertButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_certCreateCertButtonActionPerformed
		if (this.server.cert_public_key == null) {
			JOptionPane.showMessageDialog(this, "ERROR load public key first.", "Error load public key first",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		if (this.certNamefiled.getText() == null || this.certNamefiled.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "ERROR name not provided", "Error ,Name please",
					JOptionPane.ERROR_MESSAGE);
			return;
		}

		// choose the file to save the cert
		JFileChooser choose_file = new JFileChooser("save cert to file...");
		int returnVal = choose_file.showDialog(this, "Save certificate");

		// if the user pressed the accept in the save file dialog
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			File file = choose_file.getSelectedFile(); // get the file

			if (this.server.create_cert(this.certNamefiled.getText(), file) == false) {
				JOptionPane.showMessageDialog(this, "ERROR creating certificate ", "ERROR creating certificate ",
						JOptionPane.ERROR_MESSAGE);
			}
		}
	}// GEN-LAST:event_certCreateCertButtonActionPerformed

	private void registernamefiledActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_registernamefiledActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_registernamefiledActionPerformed

	private void registerCodefieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_registerCodefieldActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_registerCodefieldActionPerformed

	private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_registerButtonActionPerformed
		if (this.registernamefiled.getText() == null || this.registernamefiled.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "Need name to register ", "Give me the name ",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		if (this.registerCodefield.getText() == null || this.registerCodefield.getText().equals("")) {
			JOptionPane.showMessageDialog(this, "Need registration code to register ", "Give me the registration code ",
					JOptionPane.ERROR_MESSAGE);
			return;
		}
		boolean result = this.server.register_user(this.registernamefiled.getText(), this.registerCodefield.getText());
		if (result == false)
			JOptionPane.showMessageDialog(this, "Registration failed", "Sorry ", JOptionPane.ERROR_MESSAGE);
		else {
			this.registerCodefield.setText("");
			this.registernamefiled.setText("");
			JOptionPane.showMessageDialog(this, "Registration Suceeded", "Yeah ", JOptionPane.INFORMATION_MESSAGE);
		}
	}// GEN-LAST:event_registerButtonActionPerformed

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		this.jTextArea1.setText(this.server.print_all());
	}// GEN-LAST:event_jButton2ActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton certCreateCertButton;
	private javax.swing.JTextField certNamefiled;
	private javax.swing.JButton certloadKeyButton;
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JMenu jMenu1;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTextArea jTextArea1;
	private javax.swing.JMenuItem menuSave;
	private javax.swing.JPasswordField passwordfield;
	private javax.swing.JButton registerButton;
	private javax.swing.JTextField registerCodefield;
	private javax.swing.JTextField registernamefiled;
	private javax.swing.JMenuItem savePublicmenu;
	private javax.swing.JTextField usernamefield;
	// End of variables declaration//GEN-END:variables

}
